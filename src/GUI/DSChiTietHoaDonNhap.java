/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.ChiTietHoaDonNhapDAO;
import DAO.HoaDonNhapDAO;
import DAO.NhaCungCapDAO;
import SQLConnection.DBConnection;
import dao.QuanLySanPhamDAO;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.ChiTietHoaDonNhap;
import model.HoaDonNhap;
import model.NhaCungCap;
import model.SanPham;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Asus
 */
public class DSChiTietHoaDonNhap extends javax.swing.JFrame {

    /**
     * Creates new form DSChiTietHoaDonNhap
     */
    private static int maHDN;
    private DBConnection conn;
    private double tongTien = 0;
    private int soLuong1 = 0;

    public DSChiTietHoaDonNhap(int maHDN) {
        initComponents();
        this.maHDN = maHDN;
        customizeTable();
        loadDataTableCTHDN();
        Integer HDN = maHDN;
        txtMaHDN.setText(HDN.toString());
        txtMaCTHDN.setEditable(false);
        txtMaHDN.setEditable(false);
        getLastCTHDNId();
        loadTongTien();

    }

    private void customizeTable() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < tblCTHDN.getColumnCount(); i++) {
            tblCTHDN.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        tblCTHDN.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblCTHDN.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblCTHDN.getColumnModel().getColumn(2).setPreferredWidth(200);
        tblCTHDN.getColumnModel().getColumn(3).setPreferredWidth(200);

        // Set chiều cao hàng
        tblCTHDN.setRowHeight(25);

        // Tự động điều chỉnh kích thước
        tblCTHDN.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    }

    private void loadTongTien() {
        tongTien = 0;
        try {
            tongTien = ChiTietHoaDonNhapDAO.tongTien(conn.getConnection(), maHDN);
        } catch (SQLException ex) {
            Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        DecimalFormat df = new DecimalFormat("#,##0.00");
        txtTongTien.setText(df.format(tongTien) + "đ");
    }

    private void loadDataTableCTHDN() {
        try {
            List<ChiTietHoaDonNhap> listChiTietHoaDonNhap = ChiTietHoaDonNhapDAO.getChiTietHoaDonNhapList(conn.getConnection(), maHDN);
            DefaultTableModel model = (DefaultTableModel) tblCTHDN.getModel();
            model.setRowCount(0);
            for (ChiTietHoaDonNhap cthdn : listChiTietHoaDonNhap) {

                Integer maCTHDN = cthdn.getMaCTHDN();
                String TenSP = cthdn.getSanPham().getTenSP();
                Integer soLuong = cthdn.getSoLuong();
                Double donGiaNhap = cthdn.getDonGiaNhap();
                String row[] = new String[]{
                    maCTHDN.toString(),
                    TenSP,
                    soLuong.toString(),
                    donGiaNhap.toString()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void getLastCTHDNId() {
        try {
            int newId = ChiTietHoaDonNhapDAO.getNextMaCTHDN(conn.getConnection());
            txtMaCTHDN.setText(Integer.toString(newId));
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMaCTHDN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaHDN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDonGiaNhap = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCTHDN = new javax.swing.JTable();
        txtTongTien = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtSanPham = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã CTHDN:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Đơn giá nhập:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel3.setText("SỐ LƯỢNG:");

        txtDonGiaNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Mã HDN:");

        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        tblCTHDN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaCTHDN", "Tên sản phẩm", "Số lượng", "Đơn giá nhập"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTHDN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHDNMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCTHDN);

        txtTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTongTien.setToolTipText("");

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 204, 102));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("CHI TIẾT HÓA ĐƠN NHẬP");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Tên sản phẩm:");

        jButton4.setBackground(new java.awt.Color(153, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Tìm kiếm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Tổng Tiền:");

        jButton5.setBackground(new java.awt.Color(0, 153, 153));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Export Excel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(31, 31, 31)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaCTHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton4)
                                            .addComponent(jLabel2)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addGap(12, 12, 12)))))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMaHDN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtDonGiaNhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 425, Short.MAX_VALUE)
                                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaCTHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDonGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4)))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(txtTongTien)
                    .addComponent(jLabel5)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ChiTietHoaDonNhap cthdn = new ChiTietHoaDonNhap();
        HoaDonNhap hdn = new HoaDonNhap();
        hdn.setMaHDN(maHDN);
        cthdn.setHoaDonNhap(hdn);
        int soLuong = (Integer) txtSoLuong.getValue();
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        cthdn.setSoLuong(soLuong);

        double donGiaNhap = ((Number) txtDonGiaNhap.getValue()).doubleValue();
        if (donGiaNhap <= 0) {
            JOptionPane.showMessageDialog(this, "Đơn giá nhập không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        cthdn.setDonGiaNhap(donGiaNhap);

        String tenSanPham = txtSanPham.getText();
        if (tenSanPham.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm cần nhập không được để trống", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        SanPham sp = new SanPham();
        sp.setTenSP(tenSanPham);
        cthdn.setSanPham(sp);
        try {
            ChiTietHoaDonNhapDAO.addChiTietHoaDonNhap(conn.getConnection(), cthdn);
            loadDataTableCTHDN();
            JOptionPane.showMessageDialog(this, "Thêm chi tiết hóa đơn nhập thành công.");
            getLastCTHDNId();
            loadTongTien();
            int newSoLuong = soLuong + soLuong1;
            SanPham sp1 = new SanPham();
            
            sp1.setTenSP(txtSanPham.getText());
            sp1.setSoLuong(newSoLuong);
            if(QuanLySanPhamDAO.findSanPhamByTen(conn.getConnection(), sp1.getTenSP()) != null){
                QuanLySanPhamDAO.updateSoLuongSanPhamByTen(conn.getConnection(), sp1);
            }
            ChiTietHoaDonNhapDAO.updateTongTien(conn.getConnection(), tongTien, maHDN);
        } catch (SQLException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi thêm chi tiết hóa đơn nhập.");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi kết nối cơ sở dữ liệu.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ChiTietHoaDonNhap cthdn = new ChiTietHoaDonNhap();
        int maCTHDN = Integer.parseInt(txtMaCTHDN.getText());
        cthdn.setMaCTHDN(maCTHDN);
        int soLuong = (Integer) txtSoLuong.getValue();
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        cthdn.setSoLuong(soLuong);

        double donGiaNhap = ((Number) txtDonGiaNhap.getValue()).doubleValue();
        if (donGiaNhap <= 0) {
            JOptionPane.showMessageDialog(this, "Đơn giá nhập không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        cthdn.setDonGiaNhap(donGiaNhap);
        try {
            ChiTietHoaDonNhapDAO.updateChiTietHoaDonNhap(conn.getConnection(), cthdn);
            loadDataTableCTHDN();
            JOptionPane.showMessageDialog(this, "Cap nhat chi tiết hóa đơn nhập thành công.");
            int newSoLuong = soLuong + soLuong1;
            SanPham sp = new SanPham();
            
            sp.setTenSP(txtSanPham.getText());
            sp.setSoLuong(newSoLuong);
            if(QuanLySanPhamDAO.findSanPhamByTen(conn.getConnection(), sp.getTenSP()) != null){
                QuanLySanPhamDAO.updateSoLuongSanPhamByTen(conn.getConnection(), sp);
            }
            clearInputFields();
            getLastCTHDNId();
            loadTongTien();
            ChiTietHoaDonNhapDAO.updateTongTien(conn.getConnection(), tongTien, maHDN);
        } catch (SQLException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi cap chi tiết hóa đơn nhập.");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi kết nối cơ sở dữ liệu.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void clearInputFields() {
        txtMaCTHDN.setText("");
        txtSanPham.setText("");
        txtSoLuong.setValue(0);
        txtDonGiaNhap.setValue(0);

    }
    private void tblCTHDNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHDNMouseClicked
        int selectedRow = tblCTHDN.getSelectedRow();
        if (selectedRow != -1) {
            txtMaCTHDN.setText(tblCTHDN.getValueAt(selectedRow, 0).toString());
            txtSanPham.setText(tblCTHDN.getValueAt(selectedRow, 1).toString());
            try {
                int soLuong = Integer.parseInt(tblCTHDN.getValueAt(selectedRow, 2).toString());
                txtSoLuong.setValue(soLuong);
                 soLuong1 = soLuong;
                double donGiaNhap = Double.parseDouble(tblCTHDN.getValueAt(selectedRow, 3).toString());
                txtDonGiaNhap.setValue(donGiaNhap);
            } catch (NumberFormatException e) {
                System.err.println("Error parsing numeric values: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_tblCTHDNMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            String keyword = txtTimKiem.getText();
            List<ChiTietHoaDonNhap> searchResults = ChiTietHoaDonNhapDAO.searchChiTietHoaDonNhap(conn.getConnection(), keyword, maHDN);
            DefaultTableModel model = (DefaultTableModel) tblCTHDN.getModel();
            model.setRowCount(0);

            for (ChiTietHoaDonNhap cthdn : searchResults) {
                model.addRow(new Object[]{
                    cthdn.getMaCTHDN(),
                    cthdn.getSanPham().getTenSP(),
                    cthdn.getSoLuong(),
                    cthdn.getDonGiaNhap()
                });
            }
            if (searchResults.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả nào.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi tìm kiếm.");

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        try {

            // Lấy danh sách nhà cung cấp
            List<ChiTietHoaDonNhap> cthdnList = ChiTietHoaDonNhapDAO.getChiTietHoaDonNhapList(conn.getConnection(), maHDN);

            // Hiển thị hộp thoại chọn nơi lưu file
            String filePath = chooseFileLocation();
            if (filePath != null) {
                // Xuất dữ liệu ra file Excel
                exportToExcel(cthdnList, filePath);

                // Thông báo xuất thành công
                javax.swing.JOptionPane.showMessageDialog(this, "Xuất dữ liệu ra file Excel thành công!");
            }

        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DSNhaCungCap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

     private void exportToExcel(List<ChiTietHoaDonNhap> chiTietHoaDonNhapsList, String fileName) throws IOException {
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("Chi Tiet Hoa Don Nhap");

        // Tạo tiêu đề cột
        Row headerRow = sheet.createRow(0);
        String[] columns = {"Mã CTHDN", "Tên Sản Phẩm", "Số Lượng",  "Đơn giá nhập"};

        for (int i = 0; i < columns.length; i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(columns[i]);
            CellStyle style = workbook.createCellStyle();
            Font font = workbook.createFont();
            font.setBold(true);
            style.setFont(font);
            cell.setCellStyle(style);
        }

        // Điền dữ liệu
        int rowNum = 1;
        for (ChiTietHoaDonNhap cthdn : chiTietHoaDonNhapsList) {
            Row row = sheet.createRow(rowNum++);
            row.createCell(0).setCellValue(cthdn.getMaCTHDN());
            row.createCell(1).setCellValue(cthdn.getSanPham().getTenSP());
            row.createCell(2).setCellValue(cthdn.getSoLuong());
            row.createCell(3).setCellValue(cthdn.getDonGiaNhap());
        }

        // Tự động điều chỉnh kích thước cột
        for (int i = 0; i < columns.length; i++) {
            sheet.autoSizeColumn(i);
        }

        // Ghi dữ liệu ra file
        try (FileOutputStream fileOut = new FileOutputStream(fileName)) {
            workbook.write(fileOut);
        }

        // Đóng workbook
        workbook.close();
    }

    
    private String chooseFileLocation() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu file Excel");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();

            // Đảm bảo file có đuôi .xlsx
            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }
            return filePath;
        }
        return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DSChiTietHoaDonNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        if (maHDN > 0) { // Kiểm tra giá trị hợp lệ
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new DSChiTietHoaDonNhap(maHDN).setVisible(true);
                }
            });
        } else {
            System.out.println("Mã hóa đơn nhập không hợp lệ!"); // Hoặc xử lý lỗi
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCTHDN;
    private javax.swing.JSpinner txtDonGiaNhap;
    private javax.swing.JTextField txtMaCTHDN;
    private javax.swing.JTextField txtMaHDN;
    private javax.swing.JTextField txtSanPham;
    private javax.swing.JSpinner txtSoLuong;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JLabel txtTongTien;
    // End of variables declaration//GEN-END:variables
}
